<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE nmaprun>
<?xml-stylesheet href="file:///usr/bin/../share/nmap/nmap.xsl" type="text/xsl"?>
<!-- Nmap 7.70 scan initiated Sat Mar 16 13:31:07 2019 as: nmap -T4 -sSV -p0- -&#45;script=banner -&#45;script=ssl-enum-ciphers -oA ./results/nmap/myaccount.haringey.gov.uk myaccount.haringey.gov.uk -->
<nmaprun scanner="nmap" args="nmap -T4 -sSV -p0- -&#45;script=banner -&#45;script=ssl-enum-ciphers -oA ./results/nmap/myaccount.haringey.gov.uk myaccount.haringey.gov.uk" start="1552735867" startstr="Sat Mar 16 13:31:07 2019" version="7.70" xmloutputversion="1.04">
<scaninfo type="syn" protocol="tcp" numservices="65536" services="0-65535"/>
<verbose level="0"/>
<debugging level="0"/>
<host starttime="1552735868" endtime="1552745269"><status state="up" reason="syn-ack" reason_ttl="48"/>
<address addr="195.20.223.196" addrtype="ipv4"/>
<hostnames>
<hostname name="myaccount.haringey.gov.uk" type="user"/>
</hostnames>
<ports><extraports state="filtered" count="65355">
<extrareasons reason="no-responses" count="65355"/>
</extraports>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="48"/><service name="http" product="Apache httpd" version="2.4.6" extrainfo="(CentOS) OpenSSL/1.0.2k-fips" method="probed" conf="10"><cpe>cpe:/a:apache:http_server:2.4.6</cpe></service><script id="http-server-header" output="Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips"><elem>Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips</elem>
</script></port>
<port protocol="tcp" portid="443"><state state="open" reason="syn-ack" reason_ttl="48"/><service name="ssl" product="Apache httpd" extrainfo="SSL-only mode" tunnel="ssl" method="probed" conf="10"><cpe>cpe:/a:apache:http_server</cpe></service><script id="http-server-header" output="&#xa;  Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips&#xa;  Microsoft-IIS/8.5"><elem>Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips</elem>
<elem>Microsoft-IIS/8.5</elem>
</script><script id="ssl-enum-ciphers" output="&#xa;  TLSv1.0: &#xa;    ciphers: &#xa;      TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA (dh 2048) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_CAMELLIA_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_CAMELLIA_256_CBC_SHA (rsa 2048) - A&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: client&#xa;  TLSv1.1: &#xa;    ciphers: &#xa;      TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA (dh 2048) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_CAMELLIA_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_CAMELLIA_256_CBC_SHA (rsa 2048) - A&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: client&#xa;  TLSv1.2: &#xa;    ciphers: &#xa;      TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA (dh 2048) - A&#xa;      TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA (dh 2048) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_CAMELLIA_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_CAMELLIA_256_CBC_SHA (rsa 2048) - A&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: client&#xa;  least strength: A"><table key="TLSv1.0">
<table key="ciphers">
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_CAMELLIA_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_CAMELLIA_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">client</elem>
</table>
<table key="TLSv1.1">
<table key="ciphers">
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_CAMELLIA_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_CAMELLIA_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">client</elem>
</table>
<table key="TLSv1.2">
<table key="ciphers">
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA</elem>
<elem key="kex_info">dh 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_CAMELLIA_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_CAMELLIA_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">client</elem>
</table>
<elem key="least strength">A</elem>
</script></port>
<port protocol="tcp" portid="1747"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="2358"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="2973"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="3921"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="4156"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="4724"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="4790"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="4908"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="5367"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="5887"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="5932"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="5936"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="6153"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="6645"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="6873"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="7340"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="8053"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="8443"><state state="open" reason="syn-ack" reason_ttl="48"/><service name="https-alt" servicefp="SF-Port8443-TCP:V=7.70%T=SSL%I=7%D=3/16%Time=5C8D0249%P=x86_64-unknown-linux-gnu%r(GetRequest,5DD,&quot;HTTP/1\.0\x20200\x20OK\r\nContent-Type:\x20text/html;\x20charset=utf-8\r\nContent-Length:\x20885\r\nContent-Security-Policy:\x20default-src\x20&apos;none&apos;;\x20connect-src\x20&apos;self&apos;;\x20font-src\x20&apos;self&apos;;\x20img-src\x20data:\x20https://www\.gravatar\.com\x20&apos;self&apos;;\x20script-src\x20eval:\x20inline:\x20&apos;self&apos;\x20&apos;unsafe-eval&apos;\x20&apos;unsafe-inline&apos;;\x20style-src\x20inline:\x20&apos;self&apos;\x20&apos;unsafe-inline&apos;;\x20worker-src\x20&apos;self&apos;;\x20block-all-mixed-content;\x20sandbox\x20allow-same-origin\x20allow-scripts\x20allow-forms\x20allow-popups\x20allow-modals;\r\nOctopus-Node:\x20name=AGD-VMW-P-OCT11;\x20version=2018\.10\.0\r\nReferrer-Policy:\x20no-referrer\r\nX-Content-Type-Options:\x20nosniff\r\nX-Frame-Options:\x20DENY\r\nX-XSS-Protection:\x201;\x20mode=block\r\n\r\n\r\n&lt;!doctype\x20html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n\x20\x20\x20\x20&lt;meta\x20charset=&apos;utf8&apos;&gt;\r\n\x20\x20\x20\x20&lt;meta\x20http-equiv=&apos;x-ua-compatible&apos;\x20content=&apos;ie=edge&apos;&gt;\r\n\x20\x20\x20\x20&lt;title&gt;Octopus\x20Server&lt;/title&gt;\r\n\x20\x20\x20\x20&lt;style\x20type=&apos;text/css&apos;&gt;\r\n\x20\x20\x20\x20\x20\x20\x20\x20body\x20{\r\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20&apos;Segoe\x20UI&apos;,\x20&apos;Open\x20Sans&apos;,\x20&apos;Helvetica\x20Neue&apos;,\x20Helvetica,\x20Arial,\x20s&quot;)%r(HTTPOptions,5DD,&quot;HTTP/1\.0\x20200\x20OK\r\nContent-Type:\x20text/html;\x20charset=utf-8\r\nContent-Length:\x20885\r\nContent-Security-Policy:\x20default-src\x20&apos;none&apos;;\x20connect-src\x20&apos;self&apos;;\x20font-src\x20&apos;self&apos;;\x20img-src\x20data:\x20https://www\.gravatar\.com\x20&apos;self&apos;;\x20script-src\x20eval:\x20inline:\x20&apos;self&apos;\x20&apos;unsafe-eval&apos;\x20&apos;unsafe-inline&apos;;\x20style-src\x20inline:\x20&apos;self&apos;\x20&apos;unsafe-inline&apos;;\x20worker-src\x20&apos;self&apos;;\x20block-all-mixed-content;\x20sandbox\x20allow-same-origin\x20allow-scripts\x20allow-forms\x20allow-popups\x20allow-modals;\r\nOctopus-Node:\x20name=AGD-VMW-P-OCT11;\x20version=2018\.10\.0\r\nReferrer-Policy:\x20no-referrer\r\nX-Content-Type-Options:\x20nosniff\r\nX-Frame-Options:\x20DENY\r\nX-XSS-Protection:\x201;\x20mode=block\r\n\r\n\r\n&lt;!doctype\x20html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n\x20\x20\x20\x20&lt;meta\x20charset=&apos;utf8&apos;&gt;\r\n\x20\x20\x20\x20&lt;meta\x20http-equiv=&apos;x-ua-compatible&apos;\x20content=&apos;ie=edge&apos;&gt;\r\n\x20\x20\x20\x20&lt;title&gt;Octopus\x20Server&lt;/title&gt;\r\n\x20\x20\x20\x20&lt;style\x20type=&apos;text/css&apos;&gt;\r\n\x20\x20\x20\x20\x20\x20\x20\x20body\x20{\r\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20&apos;Segoe\x20UI&apos;,\x20&apos;Open\x20Sans&apos;,\x20&apos;Helvetica\x20Neue&apos;,\x20Helvetica,\x20Arial,\x20s&quot;);" tunnel="ssl" method="probed" conf="10"/><script id="fingerprint-strings" output="&#xa;  GetRequest, HTTPOptions: &#xa;    HTTP/1.0 200 OK&#xa;    Content-Type: text/html; charset=utf-8&#xa;    Content-Length: 885&#xa;    Content-Security-Policy: default-src &apos;none&apos;; connect-src &apos;self&apos;; font-src &apos;self&apos;; img-src data: https://www.gravatar.com &apos;self&apos;; script-src eval: inline: &apos;self&apos; &apos;unsafe-eval&apos; &apos;unsafe-inline&apos;; style-src inline: &apos;self&apos; &apos;unsafe-inline&apos;; worker-src &apos;self&apos;; block-all-mixed-content; sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-modals;&#xa;    Octopus-Node: name=AGD-VMW-P-OCT11; version=2018.10.0&#xa;    Referrer-Policy: no-referrer&#xa;    X-Content-Type-Options: nosniff&#xa;    X-Frame-Options: DENY&#xa;    X-XSS-Protection: 1; mode=block&#xa;    &lt;!doctype html&gt;&#xa;    &lt;html&gt;&#xa;    &lt;head&gt;&#xa;    &lt;meta charset=&apos;utf8&apos;&gt;&#xa;    &lt;meta http-equiv=&apos;x-ua-compatible&apos; content=&apos;ie=edge&apos;&gt;&#xa;    &lt;title&gt;Octopus Server&lt;/title&gt;&#xa;    &lt;style type=&apos;text/css&apos;&gt;&#xa;    body {&#xa;    font-family: &apos;Segoe UI&apos;, &apos;Open Sans&apos;, &apos;Helvetica Neue&apos;, Helvetica, Arial, s"><elem key="GetRequest, HTTPOptions">&#xa;    HTTP/1.0 200 OK&#xa;    Content-Type: text/html; charset=utf-8&#xa;    Content-Length: 885&#xa;    Content-Security-Policy: default-src &apos;none&apos;; connect-src &apos;self&apos;; font-src &apos;self&apos;; img-src data: https://www.gravatar.com &apos;self&apos;; script-src eval: inline: &apos;self&apos; &apos;unsafe-eval&apos; &apos;unsafe-inline&apos;; style-src inline: &apos;self&apos; &apos;unsafe-inline&apos;; worker-src &apos;self&apos;; block-all-mixed-content; sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-modals;&#xa;    Octopus-Node: name=AGD-VMW-P-OCT11; version=2018.10.0&#xa;    Referrer-Policy: no-referrer&#xa;    X-Content-Type-Options: nosniff&#xa;    X-Frame-Options: DENY&#xa;    X-XSS-Protection: 1; mode=block&#xa;    &lt;!doctype html&gt;&#xa;    &lt;html&gt;&#xa;    &lt;head&gt;&#xa;    &lt;meta charset=&apos;utf8&apos;&gt;&#xa;    &lt;meta http-equiv=&apos;x-ua-compatible&apos; content=&apos;ie=edge&apos;&gt;&#xa;    &lt;title&gt;Octopus Server&lt;/title&gt;&#xa;    &lt;style type=&apos;text/css&apos;&gt;&#xa;    body {&#xa;    font-family: &apos;Segoe UI&apos;, &apos;Open Sans&apos;, &apos;Helvetica Neue&apos;, Helvetica, Arial, s</elem>
</script><script id="http-trane-info" output="Problem with XML parsing of /evox/about"/><script id="ssl-enum-ciphers" output="&#xa;  TLSv1.0: &#xa;    ciphers: &#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 1024) - A&#xa;      TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 1024) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) - C&#xa;      TLS_RSA_WITH_RC4_128_SHA (rsa 2048) - C&#xa;      TLS_RSA_WITH_RC4_128_MD5 (rsa 2048) - C&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: server&#xa;    warnings: &#xa;      64-bit block cipher 3DES vulnerable to SWEET32 attack&#xa;      Broken cipher RC4 is deprecated by RFC 7465&#xa;      Ciphersuite uses MD5 for message integrity&#xa;      Key exchange (dh 1024) of lower strength than certificate key&#xa;      Weak certificate signature: SHA1&#xa;  TLSv1.1: &#xa;    ciphers: &#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 1024) - A&#xa;      TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 1024) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) - C&#xa;      TLS_RSA_WITH_RC4_128_SHA (rsa 2048) - C&#xa;      TLS_RSA_WITH_RC4_128_MD5 (rsa 2048) - C&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: server&#xa;    warnings: &#xa;      64-bit block cipher 3DES vulnerable to SWEET32 attack&#xa;      Broken cipher RC4 is deprecated by RFC 7465&#xa;      Ciphersuite uses MD5 for message integrity&#xa;      Key exchange (dh 1024) of lower strength than certificate key&#xa;      Weak certificate signature: SHA1&#xa;  TLSv1.2: &#xa;    ciphers: &#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A&#xa;      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (dh 1024) - A&#xa;      TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 (dh 1024) - A&#xa;      TLS_DHE_RSA_WITH_AES_256_CBC_SHA (dh 1024) - A&#xa;      TLS_DHE_RSA_WITH_AES_128_CBC_SHA (dh 1024) - A&#xa;      TLS_RSA_WITH_AES_256_GCM_SHA384 (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_128_GCM_SHA256 (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA256 (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA256 (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) - C&#xa;      TLS_RSA_WITH_RC4_128_SHA (rsa 2048) - C&#xa;      TLS_RSA_WITH_RC4_128_MD5 (rsa 2048) - C&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: server&#xa;    warnings: &#xa;      64-bit block cipher 3DES vulnerable to SWEET32 attack&#xa;      Broken cipher RC4 is deprecated by RFC 7465&#xa;      Ciphersuite uses MD5 for message integrity&#xa;      Key exchange (dh 1024) of lower strength than certificate key&#xa;      Weak certificate signature: SHA1&#xa;  least strength: C"><table key="TLSv1.0">
<table key="ciphers">
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_MD5</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">server</elem>
<table key="warnings">
<elem>64-bit block cipher 3DES vulnerable to SWEET32 attack</elem>
<elem>Broken cipher RC4 is deprecated by RFC 7465</elem>
<elem>Ciphersuite uses MD5 for message integrity</elem>
<elem>Key exchange (dh 1024) of lower strength than certificate key</elem>
<elem>Weak certificate signature: SHA1</elem>
</table>
</table>
<table key="TLSv1.1">
<table key="ciphers">
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_MD5</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">server</elem>
<table key="warnings">
<elem>64-bit block cipher 3DES vulnerable to SWEET32 attack</elem>
<elem>Broken cipher RC4 is deprecated by RFC 7465</elem>
<elem>Ciphersuite uses MD5 for message integrity</elem>
<elem>Key exchange (dh 1024) of lower strength than certificate key</elem>
<elem>Weak certificate signature: SHA1</elem>
</table>
</table>
<table key="TLSv1.2">
<table key="ciphers">
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">secp256r1</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_GCM_SHA384</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_GCM_SHA256</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_DHE_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">dh 1024</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_GCM_SHA384</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_GCM_SHA256</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA256</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA256</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_256_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_AES_128_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">A</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_SHA</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_MD5</elem>
<elem key="kex_info">rsa 2048</elem>
<elem key="strength">C</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">server</elem>
<table key="warnings">
<elem>64-bit block cipher 3DES vulnerable to SWEET32 attack</elem>
<elem>Broken cipher RC4 is deprecated by RFC 7465</elem>
<elem>Ciphersuite uses MD5 for message integrity</elem>
<elem>Key exchange (dh 1024) of lower strength than certificate key</elem>
<elem>Weak certificate signature: SHA1</elem>
</table>
</table>
<elem key="least strength">C</elem>
</script></port>
<port protocol="tcp" portid="9417"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="9465"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="9879"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="10026"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="10288"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="10840"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="11269"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="11627"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="11663"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="12102"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="12256"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="12622"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="13086"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="13495"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="13595"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="13896"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="14142"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="14208"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="14273"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="14922"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="15327"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="15398"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="15652"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="17602"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18039"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18070"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18095"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18125"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18310"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18781"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="18854"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="19385"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="20995"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="21339"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="21675"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="21853"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="22243"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="22716"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="23129"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="23189"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="23472"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="23871"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="24649"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25055"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25356"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25481"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25495"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25683"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25711"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="25775"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="26051"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="26095"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="27041"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="27185"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="27243"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="27337"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="27890"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="28016"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="29273"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="29446"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="29646"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="30146"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="30282"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="30559"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="30962"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="31354"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="31438"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="31606"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="31900"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="32202"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="32312"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="32432"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="32681"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="32832"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="33089"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="33114"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="33310"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="33916"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="34009"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="34056"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="34300"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="34586"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="34791"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="35506"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="35633"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="35793"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="36363"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="36759"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="37037"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="37068"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="37379"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="37408"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="37516"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="37747"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="38292"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="38827"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="38903"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="39779"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="40271"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="42247"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="42312"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="42646"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="42840"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="42998"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="43287"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="43432"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="43474"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="43770"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="44154"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="44892"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="44977"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="45585"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="45606"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="45920"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="46223"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="46297"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="47483"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="48458"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="48799"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="49092"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="49292"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="49380"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="49846"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="51289"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="51444"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="51533"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="51695"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="52502"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="52512"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="53216"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="53629"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="53633"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="53897"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="54695"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="56018"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="56459"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="56604"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="56947"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="57378"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="58094"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="59170"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="59306"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="59499"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="59855"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="60210"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="60463"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="60617"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="61117"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="61969"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="62110"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="62203"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="62215"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="62267"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="63056"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="63380"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="63554"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="63752"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="64069"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="64527"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="64577"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
<port protocol="tcp" portid="65168"><state state="open" reason="syn-ack" reason_ttl="51"/><service name="tcpwrapped" method="probed" conf="8"/></port>
</ports>
<times srtt="91155" rttvar="35195" to="231935"/>
</host>
<runstats><finished time="1552745269" timestr="Sat Mar 16 16:07:49 2019" elapsed="9401.68" summary="Nmap done at Sat Mar 16 16:07:49 2019; 1 IP address (1 host up) scanned in 9401.68 seconds" exit="success"/><hosts up="1" down="0" total="1"/>
</runstats>
</nmaprun>
